setwd('/Users/ghizlanerehioui/Desktop/Experimental Methods 2/Labs Exos/LAB 2')
weight <- read.csv(weight.csv)
setwd('/Users/ghizlanerehioui/Desktop/Experimental Methods 2/Labs Exos/LAB 2')
weight <- read.csv('weight.csv')
# [YOUR CODE HERE]
setwd('/Users/ghizlanerehioui/Desktop/Experimental Methods 2/Labs Exos/LAB 2')
weight <- read.csv('weight.csv')
# Using summary(), generate descriptive statistics for this dataset.
# Write a few sentences about the output: what does it tell us? What does
# it not tell us?
# [YOUR RESPONSE HERE]
summary(weight)
describe(weight)
library(dplyr)
library(dbplyr)
library(dtplyr)
describe(weight)
library(Hmisc)
library(Hmisc)
describe(weight)
weight.plot <- ggplot(weight, aes(x = weight)) +
geom_density(alpha = 0.7) +
theme_minimal()
weight.plot
weight.plot
weight.sex <- ggplot(weight, aes(x = weight)) +
geom_density(alpha = 0.7) +
facet_wrap(vars(group)) +
theme_minimal()
weight.sex
View(weight)
View(weight)
?filter
w_men <- weight %<% filter(group=='Man')
# Review Problem Set (statistics)
# Experimental Methods 2
# Preliminaries
library(tidyverse)
library(psych)
# 1 : WEIGHT DATASET (t-test)
# Import the weight dataset (weight.csv) using read.csv()
# Save as a variable called "weight"
# [YOUR CODE HERE]
setwd('/Users/ghizlanerehioui/Desktop/Experimental Methods 2/Labs Exos/LAB 2')
weight <- read.csv('weight.csv')
# Using summary(), generate descriptive statistics for this dataset.
# Write a few sentences about the output: what does it tell us? What does
# it not tell us?
# [YOUR RESPONSE HERE]
summary(weight)
# Generate descriptive statistics again, this time with describe(). What
# additional information do you now have?
# [YOUR RESPONSE HERE]
library(Hmisc) # must add this library for the describe() function to work
describe(weight)
# Now, plot the distribution of weight (variable "weight"). Here is some
# simple example code:
weight.plot <- ggplot(weight, aes(x = weight)) +
geom_density(alpha = 0.7) +
theme_minimal()
weight.plot
# What do you notice?
# [YOUR RESPONSE HERE]
'ANSWER: The distribution of the weights looks close to a normal distribution.'
# Plot the data again by group (using the facet_wrap argument)
weight.sex <- ggplot(weight, aes(x = weight)) +
geom_density(alpha = 0.7) +
facet_wrap(vars(group)) +
theme_minimal()
weight.sex
# What do you notice?
# [YOUR RESPONSE HERE]
'ANSWER: The distribution of weights of men looks close to a normal distribution but has tails that arent symmetrical. But the distribution of weights of women does not looks like a normal distribution.'
# Suppose we wish to answer the question: "is men's weight significantly
# higher than women's weight?"
# For this we can use a t-test.
# Which type of t-test should we use, and why?
# [YOUR RESPONSE HERE]
'ANSWER: the data does not seem normal and we want to compare two samples (females and males): Therefore, we will be using a one-tailed independent samples non-parametric t-test.'
# Compute the t-test and report the results.
# [YOUR CODE HERE]
w_men <- weight %<% filter(group=='Man')
w_men <- weight %>% filter(group=='Man')
w_women <- weight %>% filter(group=='Woman')
w_men
w_women
t.test(w_men, w_women)
t.test(w_men$weight, w_women$weight)
weight.sex
ggplot(weight, aes(group = group, x = 'Woman', y = 'Man')) + geom_boxplot()
ggplot(weight, aes(group = group, x = group, y = weight)) + geom_boxplot()
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
ggplot(weight, aes(group = group, x = group, y = weight)) +
geom_boxplot() +
ggtitle('Box plot of female vs. male weights')
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
summary(file_path)
housetasks
summary(housetasks)
describe(housetasks)
?describe
indifference <- housetasks %>%
mutate(Wife.c = (Wife+Alternating+Husband+Jointly)/4) %>%
mutate(Alternating.c = (Wife+Alternating+Husband+Jointly)/4) %>%
mutate(Husband.c = (Wife+Alternating+Husband+Jointly)/4) %>%
mutate(Jointly.c = (Wife+Alternating+Husband+Jointly)/4) %>%
select(Wife.c, Alternating.c, Husband.c, Jointly.c)
indifference
housetasks
Wife.c
indifference
?chisq.test
chisq.test(housetasks)
# Compute Chi Square using chisq.test() and report the results
# [YOUR CODE HERE]
chisq.test(housetasks$chore,housetasks$Wife)
chisq.test(housetasks$chore,housetasks$Wife)
housetasks
View(housetasks)
names(housetasks)
colnames(housetasks)
housetasks(0)
housetasks[0]
housetasks[1]
housetasks[2]
row.names(housetasks)
chisq.test(row.names(housetasks),housetasks$Wife)
housetasks <- housetasks %>% mutate(chores=row.names(housetasks))
chisq.test(housetasks$chores,housetasks$Wife)
housetasks <- housetasks %>% mutate(chores=row.names(housetasks))
chisq.test(housetasks$chores,housetasks$Wife)
chisq.test(housetasks$chores,housetasks$Alternating)
chisq.test(housetasks$chores,housetasks$Husband)
chisq.test(housetasks$chores,housetasks$Jointly)
chisq.test(housetasks$chores,housetasks$Wife)
chisq.test(housetasks$chores,housetasks$Alternating)
chisq.test(housetasks$chores,housetasks$Husband)
chisq.test(housetasks$chores,housetasks$Jointly)
housetasks
summarize(housetasks)
summarise(housetasks)
data("mtcars")
head(mtcars)
summary(mtcars)
# Review Problem Set (statistics)
# Experimental Methods 2
# Preliminaries
library(tidyverse)
library(psych)
# 1 : WEIGHT DATASET (t-test)
# Import the weight dataset (weight.csv) using read.csv()
# Save as a variable called "weight"
# [YOUR CODE HERE]
setwd('/Users/ghizlanerehioui/Desktop/Experimental Methods 2/Labs Exos/LAB 2')
weight <- read.csv('weight.csv')
# Using summary(), generate descriptive statistics for this dataset.
# Write a few sentences about the output: what does it tell us? What does
# it not tell us?
# [YOUR RESPONSE HERE]
summary(weight)
# Generate descriptive statistics again, this time with describe(). What
# additional information do you now have?
# [YOUR RESPONSE HERE]
library(Hmisc) # must add this library for the describe() function to work
describe(weight)
# Now, plot the distribution of weight (variable "weight"). Here is some
# simple example code:
weight.plot <- ggplot(weight, aes(x = weight)) +
geom_density(alpha = 0.7) +
theme_minimal()
weight.plot
# What do you notice?
# [YOUR RESPONSE HERE]
'ANSWER: The distribution of the weights looks close to a normal distribution.'
# Plot the data again by group (using the facet_wrap argument)
weight.sex <- ggplot(weight, aes(x = weight)) +
geom_density(alpha = 0.7) +
facet_wrap(vars(group)) +
theme_minimal()
weight.sex
# What do you notice?
# [YOUR RESPONSE HERE]
'ANSWER: The distribution of weights of men looks close to a normal distribution but has tails that arent symmetrical. But the distribution of weights of women does not looks like a normal distribution.'
# Suppose we wish to answer the question: "is men's weight significantly
# higher than women's weight?"
# For this we can use a t-test.
# Which type of t-test should we use, and why?
# [YOUR RESPONSE HERE]
'ANSWER: the data does not seem normal and we want to compare two samples (females and males): Therefore, we will be using a one-tailed independent samples non-parametric t-test (Welsh two-sample t-test).'
# Compute the t-test and report the results.
# [YOUR CODE HERE]
w_men <- weight %>% filter(group=='Man')
w_women <- weight %>% filter(group=='Woman')
t.test(w_men$weight, w_women$weight)
# [YOUR RESPONSE HERE]
'On average, the mean of males weight is 68.99 and the mean of females weight is 52.10; the t-test leads to a p-value of 0.015, the degree of freedom is 13.114, and the t-value is 2.78. The test also gives us the 95% confidence level interval between 3.80 and 29.98.'
# Interpret the results - what are your findings?
# [YOUR RESPONSE HERE]
'The t-test leads to a p-value of 0.015 which is less than 0.05: therefore, we this small p-value suggests that the null hypothesis is unlikely to be true: we can reject the null hypothesis (equality of means).'
# CHALLENGE: create a boxplot to illustrate your results
# [YOUR CODE HERE]
ggplot(weight, aes(group = group, x = group, y = weight)) +
geom_boxplot() +
ggtitle('Box plot of male vs. female weights')
# HOUSEHOLD CHORES (Chi Square)
# Import the chores dataset using the following code
file_path <- "http://www.sthda.com/sthda/RDoc/data/housetasks.txt"
housetasks <- read.delim(file_path, row.names = 1)
# Using summary(), generate descriptive statistics for this dataset.
# Write a few sentences about the output: what does it tell us? What does
# it not tell us?
# [YOUR RESPONSE HERE]
summary(housetasks)
'ANSWER: The summary function generates some descriptive statistics such as the Minimum, 1st Quartile, Median, Mean, 3rd Quartile, and Maximum of the four variables of the dataset. The summary function does not tell us anything about how many datapoints (observations) nor about the variance, standard deviation, range, skewness, and kurtosis.'
# Generate descriptive statistics again, this time with describe(). What
# additional information do you now have?
# [YOUR RESPONSE HERE]
describe(housetasks)
'ANSWER: The describe function generates in addition to the mean and median some other descriptive statistics such as the variance, standard deviation, trimmed, range, skewness, and kurtosis.'
# Now, run the following code to create a table with the expected (even)
# distribution of responses
indifference <- housetasks %>%
mutate(Wife.c = (Wife+Alternating+Husband+Jointly)/4) %>%
mutate(Alternating.c = (Wife+Alternating+Husband+Jointly)/4) %>%
mutate(Husband.c = (Wife+Alternating+Husband+Jointly)/4) %>%
mutate(Jointly.c = (Wife+Alternating+Husband+Jointly)/4) %>%
select(Wife.c, Alternating.c, Husband.c, Jointly.c)
# Compare this with the housetasks table. What do you notice?
# [YOUR RESPONSE HERE]
'ANSWER: For each row, indifference contains 4 columns each filled with the same value of the average of the variables (Wife, Alternating, Husband, and Jointly) from the housetasks dataset.'
# Suppose we wish to answer the question: "are the rows (chores) and
# columns (people) statistically significantly associated?"
# Why is Chi Square appropriate?
# [YOUR RESPONSE HERE]
'ANSWER: Chi Square appropriate because it measures whether two or more categorical variables are dependent'
# Compute Chi Square using chisq.test() and report the results
# [YOUR CODE HERE]
housetasks <- housetasks %>% mutate(chores=row.names(housetasks))
chisq.test(housetasks$chores,housetasks$Wife)
chisq.test(housetasks$chores,housetasks$Alternating)
chisq.test(housetasks$chores,housetasks$Husband)
chisq.test(housetasks$chores,housetasks$Jointly)
# [YOUR RESPONSE HERE]
'ANSWER: ...........................................'
# Interpret the results - what are your findings?
# [YOUR RESPONSE HERE]
'ANSWER: ...........................................'
# CARS DATASET (correlation)
# Import the MT Cars dataset using the following code
data("mtcars")
head(mtcars)
# Using summary(), generate descriptive statistics for this dataset.
# Write a few sentences about the output: what does it tell us? What does
# it not tell us?
# [YOUR RESPONSE HERE]
summary(mtcars)
'ANSWER: The summary function generates some descriptive statistics such as the Minimum, 1st Quartile, Median, Mean, 3rd Quartile, and Maximum of the four variables of the dataset. The summary function does not tell us anything about how many datapoints (observations) nor about the variance, standard deviation, range, skewness, and kurtosis.'
# Generate descriptive statistics again, this time with describe(). What
# additional information do you now have?
# [YOUR RESPONSE HERE]
describe(mtcars)
'ANSWER: The describe function generates in addition to the mean and median some other descriptive statistics such as the variance, standard deviation, trimmed, range, skewness, and kurtosis.'
# (mpg). Here is some simple example code:
hp.mpg <- ggplot(mtcars, aes(x = hp, y = mpg)) +
geom_point() +
theme_minimal()
hp.mpg
hp.mpg
View(mtcars)
View(mtcars)
cor(hp,mpg)
cor(mtcars$hp,mtcars$mpg)
read.csv(income.csv)
read.csv("income.data.csv")
income <- read.csv("income.data.csv")
summary(income)
describe(mtcars)
summary(mtcars)
describe(housetasks)
inc.happ <- ggplot(income, aes(x = income, y = happiness)) +
geom_point() +
theme_minimal()
inc.happ
inc.happ <- ggplot(income, aes(x = income, y = happiness)) +
geom_point() +
theme_minimal()
inc.happ
lm(happiness~income, data = income)
# [YOUR CODE HERE]
housetasks <- housetasks %>% mutate(chores=row.names(housetasks))
chisq.test(housetasks$chores,housetasks$Wife)
chisq.test(housetasks$chores,housetasks$Alternating)
chisq.test(housetasks$chores,housetasks$Husband)
chisq.test(housetasks$chores,housetasks$Jointly)
getwd()
housetasks <- housetasks %>% mutate(chores=row.names(housetasks))
chisq.test(housetasks$chores,housetasks$Wife)
chisq.test(housetasks$chores,housetasks$Alternating)
chisq.test(housetasks$chores,housetasks$Husband)
chisq.test(housetasks$chores,housetasks$Jointly)
inc.happ <- ggplot(income, aes(x = income, y = happiness)) +
geom_point() +
theme_minimal()
inc.happ
cor(mtcars$hp,mtcars$mpg)
getwd()
setwd('/Users/ghizlanerehioui/Downloads/GitHub/DataScience2Spring2023/Labs/Lab3')
###################################
###################################
########                   ########
########   Data Science 3  ########
########       Lab 2       ########
########  7th Mar. 2023    ########
########                   ########
###################################
###################################
# Welcome to lab number 3. Today we'll be learning a few more
# R/general programming concepts before moving onto lecture examples
########################################
####    Boolean logic, continued    ####
########################################
# the main logic operators in R are as follows:
# the NOT operator, !, turns TRUE into FALSE and vice versa
!TRUE
!FALSE
# the AND operator, &, returns TRUE only if elements on both sides of the operator are TRUE
1==1 & 2==1
# the inclusive OR operator, |, returns TRUE if EITHER of the elements are TRUE
1==1 | 2==1
# there is no operator for exclusive OR, but there is a function, xor()
xor(1==1 , 2==2)
# 1.1
# mtcars is a database of cars with several variables such as horsepower, weight, number of cylinders etc.
data(mtcars)
head(mtcars)
# Using indexing (square brackets) and the & operator, write a line of code
# that selects only the rows of mtcars with at least 6 cylinders (mtcars$cyl >= 6) and horsepower of at least 110 (mtcars$hp >= 110). Remember to include all the columns.
setwd('/Users/ghizlanerehioui/Downloads/GitHub/DataScience2Spring2023/Labs/Lab3')
!TRUE
!FALSE
1==1 & 2==1
1==1 | 2==1
xor(1==1 , 2==2)
?xor
mtcars
df <- mtcars %>% select(mtcars$cyl >= 6)
df
df <- mtcars %>% select(cyl >= 6)
mtcars
df <- mtcars %>% select(cyl >= 6)
df
df <- mtcars %>% select(cyl >= 6)
mtcars %>% select(cyl >= 6)
df <- mtcars %>% filter(cyl >= 6)
df
mtcars
df <- mtcars
df <- mtcars %>% filter(cyl >= 6)
df <- mtcars %>% filter(cyl >= 6 & hp >= 110)
df
df <- df %>% filter(mpg >= 25 | wt <= 2.5)
x <- 5
if(x > 3) print ('This statement is true')
if(x-4==1){
new_object <- c('this','statement','is','also','true')
print(new_object)
}
return(n , m)
return(0 , 1)
print('Please enter a value for n (''Water'' or ''Land''):')
print('Please enter a value for n ('''Water''' or '''Land'''):')
print('Please enter a value for n ('Water' or 'Land'):')
print('Please enter a value for n (''Water'' or ''Land''):')
print('Please enter a value for n (Water or Land):')
print('Please enter w, the value for the probability of sampling of your item:')
?scanf
??scanf
?readline
print('Please enter a value for n (Water or Land):')
readline(prompt = 'Please enter a value for n (Water or Land):')
`Water or Land`water
n <- readline(prompt = 'Please enter a value for n (Water or Land):')
<- readline(prompt = 'Enter w, the value for the probability of sampling of your item:')
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item:')
n <- readline(prompt = 'Enter a value for n (Water or Land):')
is.numeric(w)
if (w<0 | w>1 | is.numeric(w)){
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item:')}
w <- as.numeric(w)
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item:')
w <- as.numeric(w)
if (w<0 | w>1 | is.numeric(w)){
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item:')}
w <- as.numeric(w)
if (w<0 | w>1 | is.numeric(w)){
w <- readline(prompt = "Please input a probability between 0 and 1")}
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item: ')
22
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item: ')
w <- as.numeric(w)
if (w<0 | w>1 | is.numeric(w)){
w <- readline(prompt = "Please input a probability between 0 and 1")}
0.2
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item: ')
w <- as.numeric(w)
if (w<0 | w>1 | is.numeric(w)){
w <- readline(prompt = "Please input a probability between 0 and 1")}
is.numeric(w)
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item: ')
w <- as.numeric(w)
if (w<0 | w>1 | is.numeric(w)==FALSE){
w <- readline(prompt = "Please input a probability between 0 and 1")}
print("The probability of Water is", w, 'and the probability of Land is', 1-w)
print("The probability of Water is"+ w+ 'and the probability of Land is'+ 1-w)
print(paste0("The probability of Water is", w, 'and the probability of Land is', 1-w))
print(paste0("The probability of Water is ", w, 'and the probability of Land is ', 1-w))
type_w_l <- probe(n, w)
probe <- function(n, w) {
w <- readline(prompt = 'Enter w, the value for the probability of sampling of your item: ')
w <- as.numeric(w)
if (w<0 | w>1 | is.numeric(w)==FALSE){
w <- readline(prompt = "Please input a probability between 0 and 1")
}
if (w == 1){
n <- 'Water'
}else if(w == 0){
n <- 'Land'
}else{
print(paste0("The probability of Water is ", w, ' and the probability of Land is ', 1-w))
}
return(n)
}
type_w_l <- probe(n, w)
data("GerberGreenImai")
# Lab Exercise: Non-Experimental Methods
# Experimental Methods 2
# [YOUR NAME HERE]
# [SUBMISSION DATE]
## INSTALLING AND LOADING PACKAGES
# Install new packages
install.packages("MatchIt")
install.packages("Matching")
# This is a command to make sure that "select" means the dplyr function
# (don't worry if this is confusing - it is a bit technical!)
select <- dplyr::select
## DATASET
# For the analysis, we will use the dataset from Gerber & Green (2000) as used by Imai
data("GerberGreenImai")
# Lab Exercise: Non-Experimental Methods
# Experimental Methods 2
# [YOUR NAME HERE]
# [SUBMISSION DATE]
## INSTALLING AND LOADING PACKAGES
# Install new packages
install.packages("MatchIt")
install.packages("Matching")
# Load packages
library(tidyverse)
library(dplyr)
library(dslabs)
